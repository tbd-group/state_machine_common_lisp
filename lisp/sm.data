static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)6116, (cl_index)6116,
        (ecl_base_char*)
"common-lisp-user::vertex-t common-lisp-user::copy-vertex-t common-lisp-user::ver"
 "tex-t-p common-lisp-user::make-vertex-t 0 common-lisp-user::coin common-lisp-use"
 "r::take common-lisp-user::seq common-lisp-user::n common-lisp-user::drop common-"
 "lisp-user::str-last common-lisp-user::str (> common-lisp-user::l 0) common-lisp-"
 "user::vertex-1-entry \"vertex 1 entry\" common-lisp-user::vertex-2-entry \"vertex 2"
 " entry\" common-lisp-user::vertex-3-entry \"vertex 3 entry\" common-lisp-user::vert"
 "ex-4-entry \"vertex 4 entry\" common-lisp-user::vertex-1-do \"vertex 1 do\" common-l"
 "isp-user::vertex-2-do \"vertex 2 do\" common-lisp-user::vertex-3-do \"vertex 3 do\" "
 "common-lisp-user::vertex-4-do \"vertex 4 do\" common-lisp-user::vertex-1-exit \"ver"
 "tex 1 exit\" common-lisp-user::vertex-2-exit \"vertex 2 exit\" common-lisp-user::ve"
 "rtex-3-exit \"vertex 3 exit\" common-lisp-user::vertex-4-exit \"vertex 4 exit\" comm"
 "on-lisp-user::act-a \"action a\" common-lisp-user::act-b \"action b\" common-lisp-us"
 "er::act-c \"action c\" common-lisp-user::act-d \"action d\" common-lisp-user::act-na"
 " \"action na\" common-lisp-user::guard-x common-lisp-user::guard-y common-lisp-use"
 "r::guard-z common-lisp-user::guard-true common-lisp-user::guard-false common-lis"
 "p-user::guard-na common-lisp-user::*vertices* common-lisp-user::defvertex \"*~A*\""
 " \"~A-entry\" \"~A-do\" \"~A-exit\" \"~A\" :entry-ac :do-ac :exit-ac :evt-tbl common-lis"
 "p-user::*vertex-1* common-lisp-user::*vertex-2* common-lisp-user::*vertex-3* com"
 "mon-lisp-user::*vertex-4* common-lisp-user::*current-vertex* common-lisp-user::e"
 "val-first-admissible-triple \"~%~A: guard failed; trying next guard\" \"~%~A: all g"
 "uards failed; doing nothing\" common-lisp-user::sm-engine \"~%~A: event ~W not fou"
 "nd; doing nothing\" common-lisp-user::ev-1 common-lisp-user::ev-4 common-lisp-use"
 "r::bogus common-lisp-user::ev-3 common-lisp-user::ev-2 0 :name :entry-ac :do-ac "
 ":exit-ac :evt-tbl 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 comm"
 "on-lisp-user::vertex-t-exit-ac common-lisp-user::vertex-t-entry-ac common-lisp-u"
 "ser::vertex-t-name 0 common-lisp-user::vertex-t-evt-tbl \"VERTEX-T-\" (common-lisp"
 "-user::name common-lisp-user::entry-ac common-lisp-user::do-ac common-lisp-user:"
 ":exit-ac common-lisp-user::evt-tbl) ((common-lisp-user::name nil t nil 0 nil) (c"
 "ommon-lisp-user::entry-ac nil t nil 1 nil) (common-lisp-user::do-ac nil t nil 2 "
 "nil) (common-lisp-user::exit-ac nil t nil 3 nil) (common-lisp-user::evt-tbl nil "
 "t nil 4 nil)) (common-lisp-user::make-vertex-t) (defstruct common-lisp-user::ver"
 "tex-t) (#1=#P\"/home/brianbeckman/Documents/GitHub/state_machine_common_lisp/lisp"
 "/sm.lisp\" . 0) (defun common-lisp-user::make-vertex-t) (&key #:name #:entry-ac #"
 ":do-ac #:exit-ac #:evt-tbl) (defun common-lisp-user::coin) (#1# . 56) (defun com"
 "mon-lisp-user::take) (#1# . 90) (common-lisp-user::seq common-lisp-user::n) \"(ta"
 "ke seq n) gives the first n elements of the seq. (take seq -n) gives the\n  last "
 "n elements of the seq. This works on strings as well.\" (defun common-lisp-user::"
 "drop) (#1# . 470) \"(drop seq n) gives the seq with the first n elements removed."
 " (drop seq -n)\n  gives the seq with the last n elements removed. This works on s"
 "trings as\n  well.\" (defun common-lisp-user::str-last) (#1# . 864) (common-lisp-u"
 "ser::str) \"(str-last non-empty-string) produces the last character in a non-empt"
 "y\n  string.\" (defun common-lisp-user::vertex-1-entry) (#1# . 1074) (defun common"
 "-lisp-user::vertex-2-entry) (#1# . 1126) (defun common-lisp-user::vertex-3-entry"
 ") (#1# . 1177) (defun common-lisp-user::vertex-4-entry) (#1# . 1228) (defun comm"
 "on-lisp-user::vertex-1-do) (#1# . 1279) (defun common-lisp-user::vertex-2-do) (#"
 "1# . 1328) (defun common-lisp-user::vertex-3-do) (#1# . 1376) (defun common-lisp"
 "-user::vertex-4-do) (#1# . 1424) (defun common-lisp-user::vertex-1-exit) (#1# . "
 "1472) (defun common-lisp-user::vertex-2-exit) (#1# . 1523) (defun common-lisp-us"
 "er::vertex-3-exit) (#1# . 1573) (defun common-lisp-user::vertex-4-exit) (#1# . 1"
 "623) (defun common-lisp-user::act-a) (#1# . 1673) (defun common-lisp-user::act-b"
 ") (#1# . 1711) (defun common-lisp-user::act-c) (#1# . 1748) (defun common-lisp-u"
 "ser::act-d) (#1# . 1785) (defun common-lisp-user::act-na) (#1# . 1822) (defun co"
 "mmon-lisp-user::guard-x) (#1# . 1859) (defun common-lisp-user::guard-y) (#1# . 1"
 "891) (defun common-lisp-user::guard-z) (#1# . 1922) (defun common-lisp-user::gua"
 "rd-true) (#1# . 1953) (defun common-lisp-user::guard-false) (#1# . 1984) (defun "
 "common-lisp-user::guard-na) (#1# . 2015) (defparameter common-lisp-user::*vertic"
 "es*) (#1# . 2046) (defmacro common-lisp-user::defvertex) (#1# . 2077) (common-li"
 "sp-user::nym common-lisp-user::evt-tbl) \"vertex-1\" ((common-lisp-user::ev-2 (com"
 "mon-lisp-user::guard-true common-lisp-user::act-c common-lisp-user::*vertex-3*))"
 " (common-lisp-user::ev-3 (common-lisp-user::guard-x common-lisp-user::act-na com"
 "mon-lisp-user::*vertex-1*))) (defparameter common-lisp-user::*vertex-1*) (#1# . "
 "2762) \"vertex-2\" ((common-lisp-user::ev-4 (common-lisp-user::guard-true common-l"
 "isp-user::act-na common-lisp-user::*vertex-1*)) (common-lisp-user::ev-6 (common-"
 "lisp-user::guard-x common-lisp-user::act-c common-lisp-user::*vertex-4*))) (defp"
 "arameter common-lisp-user::*vertex-2*) (#1# . 2879) \"vertex-3\" ((common-lisp-use"
 "r::ev-1 (common-lisp-user::guard-x common-lisp-user::act-na nil) (common-lisp-us"
 "er::guard-y common-lisp-user::act-b common-lisp-user::*vertex-1*) (common-lisp-u"
 "ser::guard-z common-lisp-user::act-na common-lisp-user::*vertex-1*)) (common-lis"
 "p-user::ev-5 (common-lisp-user::guard-na common-lisp-user::act-d common-lisp-use"
 "r::*vertex-4*))) (defparameter common-lisp-user::*vertex-3*) (#1# . 2995) \"verte"
 "x-4\" ((common-lisp-user::ev-3 (common-lisp-user::guard-y common-lisp-user::act-d"
 " common-lisp-user::*vertex-2*)) (common-lisp-user::ev-6 (common-lisp-user::guard"
 "-x common-lisp-user::act-c common-lisp-user::*vertex-3*))) (defparameter common-"
 "lisp-user::*vertex-4*) (#1# . 3199) (defparameter common-lisp-user::*current-ver"
 "tex*) (#1# . 3315) (defun common-lisp-user::eval-first-admissible-triple) (#1# ."
 " 3359) (common-lisp-user::triples) (defun common-lisp-user::sm-engine) (#1# . 42"
 "48) (common-lisp-user::event-symbol)" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
